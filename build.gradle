buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "com.gradle.plugin-publish" version "0.10.1"
    id "java-gradle-plugin"
    id 'org.sonarqube' version "2.6.2"
}

group = 'org.meiskalt7.gradle'
version = file('version.txt').exists() ? file('version.txt').text.trim() : "0.0.0"

// Use java-gradle-plugin to generate plugin descriptors and specify plugin ids
gradlePlugin {
    plugins {
        versionPlugin {
            id = 'org.meiskalt7.gradle.version'
            implementationClass = 'org.meiskalt7.gradle.version.VersionPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/meiskalt7/simple-gradle-versioning-plugin'
    vcsUrl = 'https://github.com/meiskalt7/simple-gradle-versioning-plugin.git'
    description = 'Simple git versioning plugin for gradle'
    tags = ['git', 'versioning', 'version', 'semantic-versioning', 'auto-versioning', 'semver', 'release', 'changelog']

    plugins {
        versionPlugin {
            displayName = 'Simple gradle plugin for versioning based on git commit history'
        }
    }
}

ext {
    defaultEncoding = 'UTF-8'
}

allprojects {
    repositories {
        rootProject.buildscript.repositories.each {
            repositories.add(it)
        }
    }

    apply plugin: 'jacoco'
}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: org.meiskalt7.gradle.version.VersionPlugin

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

project(':buildSrc') {

    archivesBaseName = "simple-gradle-versioning-plugin"
    group = parent.group
    version = parent.version

    dependencies {
        compile gradleApi()
        compile localGroovy()
    }

    versionGenerator {
        debug = false
    }

    compileGroovy {
        doLast {
            options.encoding = defaultEncoding
            options.compilerArgs = ['-parameters', '-Xlint:unchecked']
        }
    }

    tasks.withType(Javadoc) {
        options.encoding = defaultEncoding
        options.memberLevel = JavadocMemberLevel.PRIVATE
        options.addBooleanOption("Xdoclint:all").setValue(true)
    }

    task sourceGroovy(type: Jar) {
        from sourceSets.main.groovy.srcDirs = ['src/main/groovy']
    }

    compileGroovy.dependsOn(generateVersion)
}